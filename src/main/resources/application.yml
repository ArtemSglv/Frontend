server:
  port: 8090

#spring:
#  security:
#    oauth2:
#      client:
#        registration:
#          front:
#            authorizationGrantType: client_credentials
#            clientId: client_service
#            clientSecret: clientsecret
#            redirectUriTemplate: "{baseUrl}/login/oauth2/code/{registrationId}"
#        provider:
#          front:
#            token-uri: http://localhost:9999/auth/oauth/token
#            authorizationUri: http://localhost:9999/auth/oauth/authorize
#            user-info-uri: http://localhost:9999/auth/user/me

security:
  oauth2:
    client:
      client-id: client_service
      client-secret: clientsecret
      access-token-uri: http://localhost/auth/oauth/token
      user-authorization-uri: http://localhost/auth/oauth/authorize
    resource:
      user-info-uri: http://localhost/auth/user/me

zuul:
  add-host-header: true
  include-debug-header: true
  sensitiveHeaders: Cookie,Set-Cookie
  host:
    connect-timeout-millis: 30000
    socket-timeout-millis: 30000
  routes:
    events:
      path: /events/**
      url: http://localhost:8092/events
    notifications:
      path: /notifications/**
      url: http://localhost:8093/notifications
    parser:
      path: /parser/**
      url: http://localhost:8094/parser
    scheduler:
      path: /scheduler/**
      url: http://localhost:8095/scheduler
    security:
      path: /auth/**
      url: http://localhost:9999/auth



#security:
#  oauth2:
#    client:
#      client-id: notification_service
#      client-secret: pin
#      accessTokenUri: http://localhost:9999/auth/oauth/token
#      userAuthorizationUri: http://localhost:9999/auth/oauth/authorize
##      registered-redirect-uri: http://localhost:8090
#    resource:
#      user-info-uri: http://localhost:9999/auth/user/me
spring:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG

